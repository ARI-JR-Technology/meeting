// ## üìå Passo a Passo - Manipula√ß√£o de Arrays e M√©todos Importantes

// ### üéØ Objetivo:
// Mostrar como manipular **arrays** usando m√©todos modernos como `.map()`, `.filter()`, `.reduce()` e `.forEach()`.

// M√©todos de itera√ß√£o de arrays:

// - **`.reduce()`**: Executa uma fun√ß√£o redutora (fornecida por voc√™) em cada elemento do array, resultando num √∫nico valor de retorno.
const numeros = [1, 2, 3, 4, 5];
// Fun√ß√£o arrow function para somar os n√∫meros
const soma = numeros.reduce((acumulador, num) => acumulador + num, 0);
console.log(soma); // Sa√≠da: 15

// Sem usar arrow function
const soma2 = numeros.reduce(function(acumulador, num) {
    return acumulador + num;
}, 0); 
console.log(soma2); // Sa√≠da: 15

// Fun√ß√£o tradicional para somar os n√∫meros
function somar(acumulador, num) {
    return acumulador + num;
}
console.log(numeros.reduce(somar, 0)); // Sa√≠da: 15